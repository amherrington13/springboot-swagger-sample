//Build for Groovy library project
ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name
ext.githubUserName = 'APIServices'  // Change to fit your GitHub User/Organization
ext.artifactoryRepoKey =  project.version.endsWith('-SNAPSHOT')?'libs-snapshot-local':'libs-release-local'
ext.apiVersion = 1
ext.apiResource = 'resource'  //CHANGEME (e.g. users) the is the REST resource

buildscript {
    repositories {
	    maven { url 'http://artifactory/libs-release'}
	    maven { url 'http://artifactory/libs-snapshot'}
    }
    apply from: file('gradle/buildscript.gradle'), to: buildscript
}


repositories {
  maven { url 'http://artifactory/libs-release'}
  maven { url 'http://artifactory/libs-snapshot'}
}

apply from: file('gradle/convention.gradle')
apply from: file('gradle/artifactory.gradle')
apply from: file('gradle/check.gradle')

//## Choose which coverage checker you wish to use
//apply from: file('gradle/jacoco.gradle')
apply from: file('gradle/cobertura.gradle')

apply from: file('gradle/version.gradle')
//apply from: file('gradle/release.gradle')



dependencies {
  compile "org.codehaus.groovy:groovy-all:$groovyVersion"

  //Jersey
	compile 'javax.ws.rs:jsr311-api:1.1.1'
	compile "com.sun.jersey:jersey-core:$jerseyVersion"
	compile "com.sun.jersey:jersey-server:$jerseyVersion"
	compile "com.sun.jersey:jersey-client:$jerseyVersion"
	compile "com.sun.jersey:jersey-json:$jerseyVersion"
	compile "com.sun.jersey.contribs:jersey-spring:$jerseyVersion"
	//Lifeway
	compile 'lifeway-soa:HealthCheckService:1.0.1'
	compile 'lifeway-soa:VersionService:1.0.1'

  //********** PUT Project specific dependencies here **********


  // We use the awesome Spock testing and specification framework
  testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
  testCompile 'junit:junit:4.11'
}

war {
	from('src/main/resources/') {
		include '*.xml'
		into('WEB-INF')
	}

	from('build/generated') {
		include '*.properties'
		into('WEB-INF/classes')
	}
}

war.doLast {
	println "Exploding WAR!!!! BOOM!"
	ant.unzip(src: war.archivePath, dest: "$buildDir/web")
}

task tomcat(type: Copy, dependsOn: build) {
	from 'build/libs'
	into '/opt/tomcat/webapps'
  include '*.war'
  rename { filename ->
    filename.replace war.archiveName, "v$apiVersion#${apiResource}.war"
  }
}
